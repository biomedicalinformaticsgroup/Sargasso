#!/usr/bin/env bash

set -o nounset
set -o errexit
set -o xtrace

SEPARATOR="_"

SPECIES_ONE=$1
SPECIES_TWO=$2
SAMPLES=$3
INPUT_DIR=$4
OUTPUT_DIR=$5
THREADS=$6 #How many chunks to split the read files into
MISMATCH_THRESHOLD=$7
MINMATCH_THRESHOLD=$8
MULTIMAP_THRESHOLD=$9
REJECT_MULTIMAPS=${10}
REJECT_EDITS=${11}

BLOCK_DIR=${OUTPUT_DIR}/Blocks
mkdir -p $BLOCK_DIR

for sample in ${SAMPLES}; do
    sorted_reads_prefix="${INPUT_DIR}/${sample}"
    filtered_reads_prefix="${OUTPUT_DIR}/${sample}"

    SPECIES_ONE_BAM="${sorted_reads_prefix}"."${SPECIES_ONE}".bam
    SPECIES_TWO_BAM="${sorted_reads_prefix}"."${SPECIES_TWO}".bam

    if [ "${THREADS}" -eq "1" ]
    then
        ln -rs ${SPECIES_ONE_BAM} ${BLOCK_DIR}/"${sample}${SEPARATOR}${SPECIES_ONE}${SEPARATOR}"BLOCK"${SEPARATOR}"1.bam
        ln -rs ${SPECIES_TWO_BAM} ${BLOCK_DIR}/"${sample}${SEPARATOR}${SPECIES_TWO}${SEPARATOR}"BLOCK"${SEPARATOR}"1.bam
    else
        # extract the no. reads for this sample for species 1 & 2 from the read
        # summary file
        READ_NUMBER_1=$(sambamba view -c -t ${THREADS} ${SPECIES_ONE_BAM})
        READ_NUMBER_2=$(sambamba view -c -t ${THREADS} ${SPECIES_TWO_BAM})

        # calculate block sizes for larger species
        LARGEST=0
        LARGER_SPECIES=""
        if [ "$READ_NUMBER_1" -gt "$READ_NUMBER_2" ]
        then
            LARGEST=${READ_NUMBER_1}
            LARGER_SPECIES="${SPECIES_ONE}"
        else
            LARGEST=${READ_NUMBER_2}
            LARGER_SPECIES="${SPECIES_TWO}"
        fi

        BLOCKSIZE=$(( LARGEST / THREADS ))

        # Calculate the line indexes to extract the start/end ids of the blocks
        ID_INDICES=()
        POS=1

        ID_INDICES["0"]="${POS}"

        for index in $( seq 1 $(( THREADS - 1 )) )
        do
            POS=$(( POS + BLOCKSIZE ))
            ID_INDICES["${index}"]="${POS}"
        done

        ID_INDICES["${THREADS}"]="${LARGEST}"
           
        # fetch the ids from the largest file & store in array
        SED_COMMAND=""

        for i in $(seq $(( THREADS + 1)) )
        do
            j=$(( i - 1))
            SED_COMMAND="${SED_COMMAND} ${ID_INDICES[${j}]}p;"
        done

        START_IDS=($( sambamba view -t "${THREADS}" "${sorted_reads_prefix}"."${LARGER_SPECIES}".bam | sed -n "${SED_COMMAND}" | awk '{print $1}' ))

        #echo "IDS: ${START_IDS}"
        #echo "Sed command: ${SED_COMMAND}"

        # extract blocks for both species
        for i in $(seq "${THREADS}" )
        do
            if [ "$i" -ne "${THREADS}" ]
            then
                OPERATOR="<"
            else
                OPERATOR="<="
            fi

            (sambamba view --filter "read_name >= '${START_IDS[$(( i - 1 ))]}' and read_name ${OPERATOR} '${START_IDS[${i}]}'" ${SPECIES_ONE_BAM} -o "${BLOCK_DIR}"/"${sample}${SEPARATOR}${SPECIES_ONE}${SEPARATOR}"BLOCK"${SEPARATOR}${i}".bam -l 1 -h
            sambamba view --filter "read_name >= '${START_IDS[$(( i - 1 ))]}' and read_name ${OPERATOR} '${START_IDS[${i}]}'" ${SPECIES_TWO_BAM} -o "${BLOCK_DIR}"/"${sample}${SEPARATOR}${SPECIES_TWO}${SEPARATOR}"BLOCK"${SEPARATOR}${i}".bam -l 1 -h) &
        done

        wait
    fi

    # execute python process control script passing over file location and filtering info
    filter_control ${BLOCK_DIR} ${OUTPUT_DIR} ${sample} ${SPECIES_ONE} ${SPECIES_TWO} ${MISMATCH_THRESHOLD} ${MINMATCH_THRESHOLD} ${MULTIMAP_THRESHOLD} ${REJECT_MULTIMAPS} ${REJECT_EDITS}

    if [ "${THREADS}" -eq "1" ]
    then
        mv "${OUTPUT_DIR}"/"${sample}"_"${SPECIES_ONE}"_0_filtered.bam "${OUTPUT_DIR}"/"${sample}"_"${SPECIES_ONE}"_filtered.bam
        mv "${OUTPUT_DIR}"/"${sample}"_"${SPECIES_TWO}"_0_filtered.bam "${OUTPUT_DIR}"/"${sample}"_"${SPECIES_TWO}"_filtered.bam
    else
        # Merge the resultant BAM files produced by the filtering into 1 file
        SP1_FILES=()
        SP2_FILES=()
        for i in $(seq 0 1 $((${THREADS}-1)));
        do
            SP1_FILES[${i}]="${OUTPUT_DIR}"/"${sample}"_"${SPECIES_ONE}"_"${i}"_filtered.bam
            SP2_FILES[${i}]="${OUTPUT_DIR}"/"${sample}"_"${SPECIES_TWO}"_"${i}"_filtered.bam
        done

        sambamba merge "${OUTPUT_DIR}"/"${sample}"_"${SPECIES_ONE}"_filtered.bam ${SP1_FILES[@]}
        sambamba merge "${OUTPUT_DIR}"/"${sample}"_"${SPECIES_TWO}"_filtered.bam ${SP2_FILES[@]}
    fi

    for i in $(seq "${THREADS}" )
    do
        rm "${BLOCK_DIR}"/"${sample}${SEPARATOR}${SPECIES_ONE}${SEPARATOR}"BLOCK"${SEPARATOR}${i}".bam
        rm "${BLOCK_DIR}"/"${sample}${SEPARATOR}${SPECIES_TWO}${SEPARATOR}"BLOCK"${SEPARATOR}${i}".bam
        less=$(( ${i} - 1))

        if [ "${THREADS}" -ne "1" ]
        then
            rm "${OUTPUT_DIR}"/"${sample}"_"${SPECIES_ONE}"_"${less}"_filtered.bam
            rm "${OUTPUT_DIR}"/"${sample}"_"${SPECIES_TWO}"_"${less}"_filtered.bam
        fi
    done
done

